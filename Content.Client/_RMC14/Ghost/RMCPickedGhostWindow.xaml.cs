using Content.Shared._RMC14.Ghost;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;

namespace Content.Client._RMC14.Ghost;

[GenerateTypedNameReferences]
public sealed partial class RMCPickedGhostWindow : DefaultWindow
{
    public RMCGhostRoleCandidatePickerComponent? _candidate = null;

    [Dependency] private readonly IGameTiming _timing = default!;
    public RMCPickedGhostWindow()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
    }

    public void SetPicker(RMCGhostRoleCandidatePickerComponent picker)
    {
        _candidate = picker;
    }

    protected override void FrameUpdate(FrameEventArgs args)
    {
        base.FrameUpdate(args);

        if (_candidate == null || _candidate.AutoDenyAt == null)
            return;

        var curTime = _timing.CurTime;
        var timeLeft = _candidate.AutoDenyAt.Value - curTime;
        if (timeLeft < TimeSpan.Zero)
            timeLeft = TimeSpan.Zero;

        // Round up a second.
        timeLeft = TimeSpan.FromSeconds(Math.Ceiling(timeLeft.TotalSeconds));

        TextLabel.Text = Loc.GetString(_candidate.CandidateChosenText, ("time", (int)timeLeft.TotalSeconds));
    }
}
