using Content.Shared._RMC14.Ghost;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;

namespace Content.Client._RMC14.Ghost;

[GenerateTypedNameReferences]
public sealed partial class RMCVoteWindow : DefaultWindow
{
    [Dependency] private readonly IGameTiming _timing = default!;

    private RMCGhostRoleVotingComponent? _voting = null;
    public RMCVoteWindow()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
    }

    public void SetTimer(RMCGhostRoleVotingComponent voting)
    {
        _voting = voting;
    }

    protected override void FrameUpdate(FrameEventArgs args)
    {
        // Logger.Debug($"{_gameTiming.ServerTime}, {_vote.StartTime}, {_vote.EndTime}");
        if (_voting == null)
            return;

        var curTime = _timing.CurTime;
        var timeLeft = _voting.VoteEndsAt - curTime;
        if (timeLeft < TimeSpan.Zero)
            timeLeft = TimeSpan.Zero;

        // Round up a second.
        timeLeft = TimeSpan.FromSeconds(Math.Ceiling(timeLeft.TotalSeconds));

        VotingLabel.Text = Loc.GetString(_voting.VoteMenuText, ("time", $"{timeLeft:ss}"));
    }
}

